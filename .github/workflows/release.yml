name: release

on:
  push:
    branches:
      - master
    tags:
      - '*'
  workflow_dispatch:

jobs:
  build-documentation:
    name: Build documentation pdf file
    runs-on: ubuntu-18.04
    container:
      image: skyfrk/udhbwvst:5.3.4
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Display versions of build tools
        run: |
          latexmk -v
          lualatex --version
          java -jar $PLANTUML_JAR -version
      - name: Build
        run: |
          latexmk \
          -pdf \
          -file-line-error \
          -interaction=nonstopmode \
          -cd \
          -pdflatex=lualatex \
          -synctex=1 \
          -shell-escape \
          src/documentation/root.tex
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: src/documentation/root.pdf
  build-server:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install python dependencies
        working-directory: src/server
        run: |
          python -m pip install --upgrade pip
          pip install pylint pyinstaller
          pip install -r requirements.txt
      - name: Lint with pylint
        working-directory: src/server
        run: pylint app --exit-zero
      - name: Create executables
        working-directory: src/server
        run: pyinstaller app/__main__.py --onefile -n server --hidden-import thespian.system.multiprocTCPBase 
      - name: Run executable with --help command
        working-directory: src/server/dist
        run: ./server --help 
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: server-${{ matrix.os }}
          path: src/server/dist/*
  build-client:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-2019, macos-10.15]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install python dependencies
        working-directory: src/client
        run: |
          python -m pip install --upgrade pip
          pip install pylint pyinstaller
          pip install -r requirements.txt
      - name: Lint with pylint
        working-directory: src/client
        run: pylint app --rcfile=.pylintrc --exit-zero
      - name: Create executables
        working-directory: src/client
        run: pyinstaller app/__main__.py --onefile -n client
      - name: Run executable with --version command
        working-directory: src/client/dist
        run: ./client --version 
      - name: Run executable with --help command
        working-directory: src/client/dist
        run: ./client --help 
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: client-${{ matrix.os }}
          path: src/client/dist/*

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    name: Deploy to GitHub Releases
    needs: [ build-documentation, build-server, build-client ]
    runs-on: ubuntu-18.04
    steps:
      - name: Download
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Prepare
        run: |
          mkdir -p staging/Seminararbeit-ABE1-Gruppe-B1
          mkdir -p staging/Binaries
          mv src/server staging/Seminararbeit-ABE1-Gruppe-B1
          mv src/client staging/Seminararbeit-ABE1-Gruppe-B1
          mv artifacts/documentation/root.pdf "staging/Seminararbeit-ABE1-Gruppe-B1/WWI17B-Seminararbeit-ABE1-Gruppe-B1-${GITHUB_REF##*/}.pdf"
          mv artifacts/server** staging/Binaries
          mv artifacts/client** staging/Binaries
          cd staging && zip -r ../Seminararbeit-ABE1-Gruppe-B1.zip Seminararbeit-ABE1-Gruppe-B1 && zip -r ../Binaries.zip Binaries
      - name: Deploy
        uses: softprops/action-gh-release@v1
        with:
          files: staging/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
